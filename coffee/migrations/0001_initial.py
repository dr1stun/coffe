# Generated by Django 5.2.2 on 2025-06-05 08:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название ингредиента')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название напитка/еды')),
                ('category', models.CharField(blank=True, max_length=50, null=True, verbose_name='Категория')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Цена')),
                ('available', models.BooleanField(default=True, verbose_name='Доступен в меню')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='Изображение')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('гость', 'Гость'), ('бариста', 'Бариста'), ('администратор', 'Администратор')], default='гость', max_length=20, verbose_name='Роль')),
                ('order_count', models.IntegerField(default=0, verbose_name='Количество заказов')),
                ('guest_discount', models.DecimalField(decimal_places=2, default=0, max_digits=4, verbose_name='Скидка для гостей (%)')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='coffee_users', related_query_name='coffee_user', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='coffee_users', related_query_name='coffee_user', to='auth.permission')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Новый', 'Новый'), ('В работе', 'В работе'), ('Готов', 'Готов'), ('Выдан', 'Выдан'), ('Отменен', 'Отменен')], default='Новый', max_length=50, verbose_name='Статус заказа')),
                ('discount_applied', models.BooleanField(default=False, verbose_name='Скидка применена')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Общая стоимость до скидки')),
                ('final_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Итоговая сумма')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время оформления заказа')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderStatusLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(max_length=50, verbose_name='Предыдущий статус')),
                ('new_status', models.CharField(max_length=50, verbose_name='Новый статус')),
                ('changed_at', models.DateTimeField(auto_now_add=True, verbose_name='Когда изменено')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кто изменил')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Лог статуса заказа',
                'verbose_name_plural': 'Логи статусов заказов',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(verbose_name='Количество')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Цена за штуку')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.order', verbose_name='Заказ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Позиция заказа',
                'verbose_name_plural': 'Позиции заказа',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Оценка (1-5)')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата отзыва')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.product', verbose_name='Продукт')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор отзыва')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SoldOut',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(default='Отсутствует ингредиент', verbose_name='Причина')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Когда помечен как раскупленный')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.product', verbose_name='Недоступный продукт')),
            ],
            options={
                'verbose_name': 'Раскупленный товар',
                'verbose_name_plural': 'Раскупленные товары',
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('times_ordered', models.IntegerField(default=0, verbose_name='Сколько раз заказан')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='coffee.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Статистика продукта',
                'verbose_name_plural': 'Статистика продуктов',
            },
        ),
        migrations.CreateModel(
            name='StopList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Когда добавлен в стоп')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кто добавил')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.ingredient', verbose_name='Недоступный ингредиент')),
            ],
            options={
                'verbose_name': 'Стоп-лист',
                'verbose_name_plural': 'Стоп-листы',
            },
        ),
        migrations.CreateModel(
            name='ProductDescriptor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriptor', models.CharField(max_length=50, verbose_name='Дескриптор вкуса')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Дескриптор продукта',
                'verbose_name_plural': 'Дескрипторы продуктов',
                'unique_together': {('product', 'descriptor')},
            },
        ),
        migrations.CreateModel(
            name='ProductIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.CharField(max_length=50, verbose_name='Количество')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.ingredient', verbose_name='Ингредиент')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coffee.product', verbose_name='Напиток')),
            ],
            options={
                'verbose_name': 'Состав напитка',
                'verbose_name_plural': 'Составы напитков',
                'unique_together': {('product', 'ingredient')},
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriptor', models.CharField(max_length=50, verbose_name='Предпочитаемый дескриптор')),
                ('weight', models.IntegerField(default=1, verbose_name='Вес предпочтения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Предпочтение пользователя',
                'verbose_name_plural': 'Предпочтения пользователей',
                'unique_together': {('user', 'descriptor')},
            },
        ),
    ]
